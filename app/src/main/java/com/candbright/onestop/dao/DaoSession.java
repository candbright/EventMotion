package com.candbright.onestop.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.candbright.onestop.common.bean.Song;
import com.candbright.onestop.common.bean.SongComment;
import com.candbright.onestop.model.data.Question;
import com.candbright.onestop.model.data.QuestionBank;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig songDaoConfig;
    private final DaoConfig songCommentDaoConfig;
    private final DaoConfig questionDaoConfig;
    private final DaoConfig questionBankDaoConfig;

    private final SongDao songDao;
    private final SongCommentDao songCommentDao;
    private final QuestionDao questionDao;
    private final QuestionBankDao questionBankDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        songDaoConfig = daoConfigMap.get(SongDao.class).clone();
        songDaoConfig.initIdentityScope(type);

        songCommentDaoConfig = daoConfigMap.get(SongCommentDao.class).clone();
        songCommentDaoConfig.initIdentityScope(type);

        questionDaoConfig = daoConfigMap.get(QuestionDao.class).clone();
        questionDaoConfig.initIdentityScope(type);

        questionBankDaoConfig = daoConfigMap.get(QuestionBankDao.class).clone();
        questionBankDaoConfig.initIdentityScope(type);

        songDao = new SongDao(songDaoConfig, this);
        songCommentDao = new SongCommentDao(songCommentDaoConfig, this);
        questionDao = new QuestionDao(questionDaoConfig, this);
        questionBankDao = new QuestionBankDao(questionBankDaoConfig, this);

        registerDao(Song.class, songDao);
        registerDao(SongComment.class, songCommentDao);
        registerDao(Question.class, questionDao);
        registerDao(QuestionBank.class, questionBankDao);
    }
    
    public void clear() {
        songDaoConfig.clearIdentityScope();
        songCommentDaoConfig.clearIdentityScope();
        questionDaoConfig.clearIdentityScope();
        questionBankDaoConfig.clearIdentityScope();
    }

    public SongDao getSongDao() {
        return songDao;
    }

    public SongCommentDao getSongCommentDao() {
        return songCommentDao;
    }

    public QuestionDao getQuestionDao() {
        return questionDao;
    }

    public QuestionBankDao getQuestionBankDao() {
        return questionBankDao;
    }

}
